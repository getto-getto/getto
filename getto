#!/usr/bin/env php
<?php
# root
define("ROOT", getcwd());
# version
define("VERSION", "1.0.0");
# text styles
define("TEXT_NONE",         "\e[0m");
define("TEXT_BOLD",         "\e[1m");
define("TEXT_COLOR_RED",    "\e[0;31m");
define("TEXT_COLOR_GREEN",  "\e[0;32m");
define("TEXT_COLOR_YELLOW", "\e[0;33m");

# header
_print(TEXT_BOLD);
_print("***********************************\n");
_print("*** Getto [PHP Package Manager] ***\n");
_print("***********************************\n");
_print(TEXT_NONE);

if (PHP_SAPI != "cli") {
    _print_fail("Use only in CLI!\n", 1);
}

$argc = getto_argc();
if ($argc < 2) {
    _print_fail("No enough arguments given!\n", 1);
}

switch (getto_argv(1)) {
    case "-i":
    case "--install":
        getto_run_install();
        break;
    case "-h":
    case "--help":
        getto_run_help();
        break;
    case "-v":
    case "-version":
        getto_run_version();
        break;
    default:
        // fail!
}

# arg stuff
function getto_argc() {
    if (isset($GLOBALS["argc"])) {
        return $GLOBALS["argc"];
    }
    return 0;
}
function getto_argv($i) {
    if (isset($GLOBALS["argv"][$i])) {
        return $GLOBALS["argv"][$i];
    }
    return null;
}

# run stuff
function getto_run_help() {
    _print("
--- Usage
    getto -option [--extra-option]
    getto -option [@package [-sub-option 'value']] | [--extra-option]

--- Options
    -i, --install   Install (a, all) package(s).
    -c, --check     Check (a, all) package(s) for newer version(s).
    -u, --update    Update (a, all) package(s).
    -r, --remove    Update a package.
    -h, --help      Display help.
    -v, --version   Print version.

--- Examples
    # install
    getto -i --all
    getto -i phpunit/phpunit
    getto -i phpunit/phpunit -v '3.0'
    # check
    getto -c --all
    getto -c --self
    getto -c phpunit/phpunit
    # update
    getto -u --all
    getto -u --self
    getto -u phpunit/phpunit
    # remove
    getto -r phpunit/phpunit
");
}
function getto_run_version() {
    _print("
Version: ". VERSION ."
");
}
function getto_run_install() {}

# https://github.com/<NAMESPACE>/<NAME>/archive/<BRANCH [master, 3.1.0, ...]>.zip
function getto_zip_get($url) {}
function getto_zip_extract($zip) {}

# printers
function _print($arg) {
    fwrite(STDOUT, print_r($arg, true));
}
function _printn($arg) {
    fwrite(STDOUT, print_r($arg, true) ."\n");
}
function _printr(...$args) {
    $form = "";
    foreach ($args as $_) {
        $form .= "%s ";
    }
    _print(vsprintf($form, $args));
}
function _print_fail($arg, $enum = -1) {
    _print(TEXT_COLOR_RED ."Fail: {$arg}". TEXT_NONE);
    if ($enum > -1) {
        exit($enum);
    }
}
